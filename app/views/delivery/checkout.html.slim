#billing-details
  .banner.text-center.clearfix
    .container
      .stepwizard
        .stepwizard-step
          button.btn.btn-default.btn-circle.active type="button"  1
          p = t("delivery.shopping_cart")
        .stepwizard-step
          button.btn.btn-default.btn-circle.active type="button"  2
          p = t("delivery.checkout")
        .stepwizard-step
          button.btn.btn-default.btn-circle type="button"  3
          p = t("delivery.order_complete")
  .share-exprience.clearfix.twenty-forty-public-form
    .container
      = form_for :order, url: save_order_delivery_index_path, html: { "data-parsley-validate" => true, class: "form clearfix twenty-forty-public-form showcase-right" } do |f|
        .form-holder.clearfix.showcase-right
          .form-group.row.clearfix
            .col-sm-8.arabic-order
              .col-sm-12
                h2 = t("delivery.billing_details")
              .col-sm-12.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.first_name")
                  = f.text_field :first_name, class: 'form-control', required: true, value: "#{current_user.first_name if current_user.present?}"
              / .col-sm-6.mob-b-15.arabic-right
              /   .form-group
              /     = f.label t("delivery.last_name")
              /     = f.text_field :last_name,required: true, class: 'form-control', value: "#{current_user.last_name if current_user.present?}"
              .col-sm-6.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.email")
                  = f.email_field :email, class: 'form-control', id: 'email', value: "#{current_user.email if current_user.present?}", data: {parsley_required: "", 'data-validate': 'admin/users/checkemail'}
              .col-sm-6.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.phone")
                  = f.text_field :phone, class: 'form-control', "data-parsley-type": "number", required: true, value: "#{current_user.phone if current_user.present?}"
              - if session[:delivery_details].present? && session[:delivery_details].try(:[], "delivery_mode") == "carry_out"

                .col-sm-12.mob-b-15.arabic-right
                  .form-group

                    = f.label t("delivery.branch")
                    = f.text_field :location, class: 'form-control', required: true, value: "#{Location.find(session[:delivery_details].try(:[], "location_id")).address}"

                - if session[:delivery_details].present? && session[:delivery_details].try(:[], "pick_time").present?

                  .col-sm-6.mob-b-15.arabic-right
                    .form-group
                      = f.label t("delivery.pick_time")
                      = f.text_field :delivery_time, class: 'form-control pointer',readonly: true, value: "#{session[:delivery_details].try(:[], "pick_time").present? ? session[:delivery_details].try(:[], "pick_time") : Time.now.strftime("%m-%d-%Y %I:%M")}"

              - else

                = f.hidden_field :address_id, value: "#{session[:address].try(:[], 'address_id') if session[:address].try(:[], 'address_id').present?}"

                .col-sm-12.mob-b-15.arabic-right
                  .form-group
                    = f.fields_for :address do |ff|

                      = ff.hidden_field :user_id, value: "#{current_user.id}" if current_user.present?
                      .row
                      /   .col-sm-6.mob-b-15.arabic-right
                      /     .form-group
                      /       = ff.label t("address.address_type")
                      /       = ff.select :address_type, options_for_select(Address.address_types.map{|k,v| [k,k] }), {},class: 'form-control pointer'
                      /       / ,readonly: true, value: "#{session[:address].try(:[], 'address_type').present? ? session[:address].try(:[], 'address_type') : session[:address].try(:[], 'address').try(:[], 'address_type')}"

                      /   .col-sm-6.mob-b-15.arabic-right
                      /     .form-group
                      /       = ff.label t("address.building_name")
                      /       = ff.text_field :building_name, class: 'form-control pointer'
                      /       / ,readonly: true, value: "#{session[:address].try(:[], 'building_name').present? ? session[:address].try(:[], 'building_name') : session[:address].try(:[], 'address').try(:[], 'building_name')}"

                      / .row
                      /   .col-sm-6.mob-b-15.arabic-right
                      /     .form-group
                      /       = ff.label t("address.building_number")
                      /       = ff.text_field :building_number, class: 'form-control pointer'
                      /       / ,readonly: true, value: "#{session[:address].try(:[], 'building_number').present? ? session[:address].try(:[], 'building_number') : session[:address].try(:[], 'address').try(:[], 'building_number')}"

                      /   .col-sm-6.mob-b-15.arabic-right
                      /     .form-group
                      /       = ff.label t("address.room_no")
                      /       = ff.text_field :room_no, class: 'form-control pointer'
                      /       / ,readonly: true, value: "#{session[:address].try(:[], 'room_no').present? ? session[:address].try(:[], 'room_no') : session[:address].try(:[], 'address').try(:[], 'room_no')}"

                      .row
                        .col-sm-12.mob-b-15.arabic-right
                          .form-group
                            = ff.label t("address.direction")
                            = ff.text_field :direction, class: 'form-control pointer'
                            / ,readonly: true, value: "#{session[:address].try(:[], 'direction').present? ? session[:address].try(:[], 'direction') : session[:address].try(:[], 'address').try(:[], 'direction')}"

                        .col-sm-6.mob-b-15.arabic-right
                          .form-group
                            = f.label t("address.delivery_time")
                            = f.text_field :delivery_time, class: 'form-control pointer',readonly: true, value: "#{session[:delivery_time].present? ? session[:delivery_time].try(:[], 'delivery_time') : Time.now.strftime("%m-%d-%Y %I:%M")}"
              .col-sm-6.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.state_country")
                  = f.select :state, options_for_select(@states.map{|k,v| [v,k] }, @states.keys[5]), {}, class: 'form-control', required: true
              .col-sm-6.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.town_city")
                  = f.select :city, options_for_select(["Bahawalpur"], [ {}.map{|k,v| [v,k] }] ), {}, {class: 'form-control',required: true}
              .col-sm-12.mob-b-15.arabic-right
                .form-group
                  = f.label t("delivery.address")
                  = f.text_field :address_one,class: 'form-control',required: true
             
              .col-sm-12.mob-b-15.arabic-right
                .form-group
                  = f.check_box :is_location_check, id: 'check', class: "custom-space"
                  = f.label t("delivery.check_loc_msg"), class: "checkbox-label"
              .col-sm-6.mob-b-15.arabic-right.position
                .form-group
                  = f.label t("delivery.longitude")
                  = f.text_field :long, class: 'form-control', "data-parsley-type": "number",readonly: true
              .col-sm-6.mob-b-15.arabic-right.position
                .form-group
                  = f.label t("delivery.latitude")
                  = f.text_field :lat, class: 'form-control', "data-parsley-type": "number", readonly: true
              .col-sm-12.mob-b-15.arabic-right.text-white
                .form-group
                  #current_location

            .col-sm-4.order
              h2 = t("delivery.your_order")
              .card-box
                .product-price
                  .product
                    h3 class="pull-left" = t("delivery.product")
                    h4 class="pull-right" = t("delivery.total")
                  - total = 0
                  - @chef_menu_items.each do |chef_menu_item|
                    - menu_item = chef_menu_item.menu_item
                    - quantity = session[:cart][ChefCategoryItem.item_key_for_cart(chef_menu_item.id)]
                    - total = total + (quantity * menu_item.price)
                    .row
                      .col-sm-12
                        .price class="pull-left"
                          .item-box
                            strong
                              | x #{quantity}
                              span
                                | #{menu_item.title}
                            h4 = t("delivery.base")
                            p = "$#{number_with_precision(menu_item.price, precision: 2)}"
                        .total class="pull-right"
                          p = "$#{number_with_precision(quantity * menu_item.price, precision:2)}"
                .sub-total class="clearfix"
                  h4 class="pull-left" = t("delivery.sub_total")
                  p class="pull-right" = "$#{number_with_precision(total, precision: 2)}"
                .sub-total.clearfix
                  h4.pull-left = t("delivery.GST")
                  p.pull-right = "#{@tax} %"
                .total class="clearfix"
                  h4 class="pull-left" = t("delivery.total")
                  p class="pull-right" = "$#{number_with_precision(total + (total * (@tax_percentage)), precision: 2)}"
                .form-check
                  = f.collection_radio_buttons(:payment_method, Order.payment_methods, :first, :last, { checked: session[:address].present? ? Order.payment_methods.keys.first : Order.payment_methods.keys.last }) do |b|
                    = b.label(data: {value: b.text.zero? ? t("delivery.paytabs") : t("delivery.place_order")}) { b.radio_button + (b.text.zero? ? t("delivery.debit_credit") : t("delivery.home_delivery") ) }
                .form-check.text-holder
                  = f.check_box :terms, required: true, "data-parsley-error-message": "You must accept terms to place order"
                  p class="text"
                    span
                      = t("delivery.terms")
                      span
                        | *
                .button
                  = f.submit t("delivery.place_order"), id: "place_order", class: 'btn custom-btn btn-primary', data: { disable_with: session[:address].present? ? t("delivery.paytabs") : t("delivery.place_order") }

- if current_user.blank? && session[:guest_order].blank?
  #load_login_modals
